# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "thunderbolt" "nvme" "usb_storage" "usbhid" "sd_mod" "rtsx_pci_sdmmc"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.kernelParams = ["quiet" "splash" "resume_offset=99109877" "resume=/dev/disk/by-uuid/7e21dc33-06c2-4f2e-9ca9-37d34755c9fa"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/7e21dc33-06c2-4f2e-9ca9-37d34755c9fa";
    fsType = "btrfs";
    options = ["subvol=@" "noatime" "compress=zstd"];
  };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/2e2413c1-32f5-4450-9c9a-937596e069ba";

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/7e21dc33-06c2-4f2e-9ca9-37d34755c9fa";
    fsType = "btrfs";
    options = ["subvol=@home" "noatime" "compress=zstd"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/7e21dc33-06c2-4f2e-9ca9-37d34755c9fa";
    fsType = "btrfs";
    options = ["subvol=@nix" "noatime" "compress=zstd"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/DC4A-368B";
    fsType = "vfat";
  };

  fileSystems."/swap" = {
    device = "/dev/disk/by-uuid/7e21dc33-06c2-4f2e-9ca9-37d34755c9fa";
    options = ["subvol=@swap" "noatime"];
    fsType = "btrfs";
  };

  swapDevices = [{device = "/swap/swapfile";}];
  boot.resumeDevice = "/dev/disk/by-uuid/7e21dc33-06c2-4f2e-9ca9-37d34755c9fa";

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s13f0u3u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wwan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
